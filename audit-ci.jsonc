{
  "$schema": "https://github.com/IBM/audit-ci/raw/main/docs/schema.json",
  "low": true,
  "allowlist": [
    // ws affected by a DoS when handling a request with many HTTP headers
    "GHSA-3h5v-q93c-6h6q",
    // follow-redirects' Proxy-Authorization header kept across hosts
    "GHSA-cxjh-pqwp-8mfp",
    // Undici's Proxy-Authorization header not cleared on cross-origin redirect for dispatch, request, stream, pipeline
    "GHSA-m4v8-wqvr-p9f7",
    // Undici's fetch with integrity option is too lax when algorithm is specified but hash value is in incorrect
    "GHSA-9qxr-qj54-h672",
    // Uncontrolled resource consumption in braces
    "GHSA-grv7-fg5c-xmjg",
    // Use of Insufficiently Random Values in undici
    "GHSA-c76h-2ccp-4975",
    // Server-Side Request Forgery in axios
    "GHSA-8hc4-vh64-cxmj",
    // axios Requests Vulnerable To Possible SSRF and Credential Leakage via Absolute URL
    "GHSA-jr5f-v2jv-69x6",
    // Elliptic's EDDSA missing signature length check
    "GHSA-f7q4-pwc6-w24p",
    // Elliptic's ECDSA missing check for whether leading bit of r and s is zero
    "GHSA-977x-g7h5-7qgw",
    // Elliptic allows BER-encoded signatures
    "GHSA-49q7-c7j4-3p7m",
    // Valid ECDSA signatures erroneously rejected in Elliptic
    "GHSA-fc9h-whq2-v747",
    // Elliptic's verify function omits uniqueness validation
    "GHSA-434g-2637-qmqr",
    // Elliptic's private key extraction in ECDSA upon signing a malformed input (e.g. a string)
    // we do not expect malicious inputs in this project
    "GHSA-vjh7-7g9h-fjfh",
    // Regular Expression Denial of Service (ReDoS) in micromatch
    "GHSA-952p-6rrq-rcjv",
    // secp256k1-node allows private key extraction over ECDH
    // we don't use ECDH in this project
    "GHSA-584q-6j8j-r5pm",
    // Regular Expression Denial of Service (ReDoS) in cross-spawn
    "GHSA-3xgq-45jj-v275",
    // Cross-site Scripting (XSS) in serialize-javascript
    "GHSA-76p7-773f-r4q5",
    // GovernorCompatibilityBravo may trim proposal calldata
    // we don't use OZ in this project. it's a nitro-contracts dependency
    "GHSA-93hq-5wgc-jc82",
    // OpenZeppelin Contracts vulnerable to Improper Escaping of Output
    "GHSA-g4vp-m682-qqmp",
    // OpenZeppelin Contracts using MerkleProof multiproofs may allow proving arbitrary leaves for specific trees
    "GHSA-wprv-93r4-jj2p",
    // OpenZeppelin Contracts TransparentUpgradeableProxy clashing selector calls may not be delegated
    "GHSA-mx2q-35m2-x2rh",
    // OpenZeppelin Contracts's governor proposal creation may be blocked by frontrunning
    "GHSA-5h3x-9wvq-w4m2",
    // OpenZeppelin Contracts base64 encoding may read from potentially dirty memory
    "GHSA-9vx6-7xxf-x967",
    // cookie accepts cookie name, path, and domain with out of bounds characters
    "GHSA-pxg6-pf52-xh8x"
  ]
}
